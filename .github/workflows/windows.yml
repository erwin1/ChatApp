name: Windows

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Visual Studio shell
        uses: egor-tensin/vs-shell@v1

      - name: Setup Gluon's GraalVM
        uses: gluonhq/setup-graalvm@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Make staging directory
        run: mkdir staging

      - name: Gluon License
        uses: gluonhq/gluon-build-license@master
        with:
          gluon-license: ${{ secrets.GLUON_LICENSE }}
          dir: App

      - name: Gluon Build (disabled)
        if: ${{ false }}
        run: mvn install && mvn -Pdesktop gluonfx:build gluonfx:package -f App

      - name: Copy native image to staging (disabled)
        if: ${{ false }}
        run: cp -r App/target/gluonfx/x86_64-windows/ChatApp.exe staging

      - name: Upload (disabled)
        if: ${{ false }}
        uses: actions/upload-artifact@v2
        with:
          name: Package
          path: staging

      - name: Setup java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and package
        run: mvn clean install && mvn package -f App

      - name: Create Bundle using jpackage
        id: outputfile
        shell: cmd
        run: |
          call .github\scripts\build_app_windows.bat
          echo ::set-output name=path::App\target\installer\ChatApp-${{ env.APP_VERSION }}.msi
        env:
          PROJECT_VERSION: 1.1.0-SNAPSHOT
          APP_VERSION: 1.0.0

      - name: Codesign
        uses: erwin1/code-sign-action@master
        with:
          certificate: '${{ secrets.WINDOWS_CERTIFICATE }}'
          password: '${{ secrets.WINDOWS_PASSWORD }}'
          certificatename: '${{ secrets.WINDOWS_CERTNAME }}'
          folder: 'App/target/installer'

      - name: Upload installer
        uses: actions/upload-artifact@v2
        with:
          name: InstallerPackage
          path: ${{ steps.outputfile.outputs.path }}

